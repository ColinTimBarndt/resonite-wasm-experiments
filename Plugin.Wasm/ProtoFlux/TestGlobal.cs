using Elements.Core;
using ProtoFlux.Core;
using ProtoFlux.Runtimes.Execution;

namespace Plugin.Wasm.ProtoFlux;

using Function = Plugin.Wasm.Components.WebAssemblyInstance.FunctionExport;

/// <summary>
/// Retrieves the type and name of a WebAssembly module's export by index.
/// </summary>
[NodeCategory("*TEST*")]
[NodeName("Test Global", false)]
public sealed class TestGlobal : VoidNode<ExecutionContext>
{
#pragma warning disable CS8618 // Initializer generated by FluxWeaver

    public readonly GlobalRef<Function?> Global;

    /// <summary>The name of the export.</summary>
    [ContinuouslyChanging]
    public readonly ObjectOutput<string?> Name;

#pragma warning restore CS8618

    private ObjectStore<Function?> _currentValue;
    private void OnGlobalChanged(Function? value, ExecutionContext ctx)
    {
        UniLog.Log($"OnGlobalChanged {value} {ctx}", true);
        _currentValue.Write(value, ctx);
    }

    /// <inheritdoc/>
    protected override void ComputeOutputs(ExecutionContext context)
    {
        Name.Write(_currentValue.Read(context)?.Name, context);
    }
}